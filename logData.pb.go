// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logData.proto

package xkcd

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LogDataStruct struct {
	Month                string   `protobuf:"bytes,1,opt,name=Month,proto3" json:"Month,omitempty"`
	Num                  int32    `protobuf:"varint,2,opt,name=Num,proto3" json:"Num,omitempty"`
	Link                 string   `protobuf:"bytes,3,opt,name=Link,proto3" json:"Link,omitempty"`
	Year                 string   `protobuf:"bytes,4,opt,name=Year,proto3" json:"Year,omitempty"`
	News                 string   `protobuf:"bytes,5,opt,name=News,proto3" json:"News,omitempty"`
	SafeTitle            string   `protobuf:"bytes,6,opt,name=SafeTitle,proto3" json:"SafeTitle,omitempty"`
	Transcript           string   `protobuf:"bytes,7,opt,name=Transcript,proto3" json:"Transcript,omitempty"`
	Alt                  string   `protobuf:"bytes,8,opt,name=Alt,proto3" json:"Alt,omitempty"`
	Img                  string   `protobuf:"bytes,9,opt,name=Img,proto3" json:"Img,omitempty"`
	Title                string   `protobuf:"bytes,10,opt,name=Title,proto3" json:"Title,omitempty"`
	Day                  string   `protobuf:"bytes,11,opt,name=Day,proto3" json:"Day,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogDataStruct) Reset()         { *m = LogDataStruct{} }
func (m *LogDataStruct) String() string { return proto.CompactTextString(m) }
func (*LogDataStruct) ProtoMessage()    {}
func (*LogDataStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ebbf8f1ae64f98b, []int{0}
}

func (m *LogDataStruct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogDataStruct.Unmarshal(m, b)
}
func (m *LogDataStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogDataStruct.Marshal(b, m, deterministic)
}
func (m *LogDataStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogDataStruct.Merge(m, src)
}
func (m *LogDataStruct) XXX_Size() int {
	return xxx_messageInfo_LogDataStruct.Size(m)
}
func (m *LogDataStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_LogDataStruct.DiscardUnknown(m)
}

var xxx_messageInfo_LogDataStruct proto.InternalMessageInfo

func (m *LogDataStruct) GetMonth() string {
	if m != nil {
		return m.Month
	}
	return ""
}

func (m *LogDataStruct) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *LogDataStruct) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *LogDataStruct) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

func (m *LogDataStruct) GetNews() string {
	if m != nil {
		return m.News
	}
	return ""
}

func (m *LogDataStruct) GetSafeTitle() string {
	if m != nil {
		return m.SafeTitle
	}
	return ""
}

func (m *LogDataStruct) GetTranscript() string {
	if m != nil {
		return m.Transcript
	}
	return ""
}

func (m *LogDataStruct) GetAlt() string {
	if m != nil {
		return m.Alt
	}
	return ""
}

func (m *LogDataStruct) GetImg() string {
	if m != nil {
		return m.Img
	}
	return ""
}

func (m *LogDataStruct) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *LogDataStruct) GetDay() string {
	if m != nil {
		return m.Day
	}
	return ""
}

func init() {
	proto.RegisterType((*LogDataStruct)(nil), "xkcd.LogDataStruct")
}

func init() { proto.RegisterFile("logData.proto", fileDescriptor_5ebbf8f1ae64f98b) }

var fileDescriptor_5ebbf8f1ae64f98b = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x3d, 0x4b, 0xc4, 0x40,
	0x10, 0x86, 0x59, 0x93, 0x9c, 0x66, 0xe4, 0xe0, 0x58, 0x2c, 0xa6, 0x10, 0x39, 0xac, 0xae, 0xb2,
	0xf1, 0x17, 0x08, 0x69, 0x0e, 0x62, 0x8a, 0x24, 0x8d, 0xe5, 0x1a, 0xd7, 0x18, 0xf2, 0xb1, 0x61,
	0x33, 0x41, 0xf3, 0xe3, 0x05, 0x99, 0x9d, 0xc2, 0xeb, 0x9e, 0x7d, 0xde, 0x61, 0xd8, 0x77, 0x60,
	0x3f, 0xb8, 0x36, 0x33, 0x64, 0x9e, 0x66, 0xef, 0xc8, 0xe9, 0xf8, 0xa7, 0x6f, 0x3e, 0x1e, 0x7f,
	0x15, 0xec, 0x73, 0xf1, 0x15, 0xf9, 0xb5, 0x21, 0x7d, 0x07, 0xc9, 0xab, 0x9b, 0xe8, 0x0b, 0xd5,
	0x51, 0x9d, 0xd2, 0x52, 0x1e, 0xfa, 0x00, 0x51, 0xb1, 0x8e, 0x78, 0x75, 0x54, 0xa7, 0xa4, 0x64,
	0xd4, 0x1a, 0xe2, 0xbc, 0x9b, 0x7a, 0x8c, 0xc2, 0x58, 0x60, 0x76, 0x6f, 0xd6, 0x78, 0x8c, 0xc5,
	0x31, 0xb3, 0x2b, 0xec, 0xf7, 0x82, 0x89, 0x38, 0x66, 0x7d, 0x0f, 0x69, 0x65, 0x3e, 0x6d, 0xdd,
	0xd1, 0x60, 0x71, 0x17, 0x82, 0x7f, 0xa1, 0x1f, 0x00, 0x6a, 0x6f, 0xa6, 0xa5, 0xf1, 0xdd, 0x4c,
	0x78, 0x1d, 0xe2, 0x0b, 0xc3, 0x7f, 0x79, 0x19, 0x08, 0x6f, 0x42, 0xc0, 0xc8, 0xe6, 0x3c, 0xb6,
	0x98, 0x8a, 0x39, 0x8f, 0x2d, 0xb7, 0x90, 0xed, 0x20, 0x2d, 0x64, 0xf3, 0x01, 0xa2, 0xcc, 0x6c,
	0x78, 0x2b, 0x73, 0x99, 0xd9, 0xde, 0x77, 0xe1, 0x18, 0xcf, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xf8, 0x57, 0x75, 0xad, 0x1d, 0x01, 0x00, 0x00,
}
